#select_task:
 # description: >
  #  Analise o JSON recebido de um documento PGR e identifique as seções na qual se trata do inventario de riscos e extraia todas as informações
   # que se aplicam nesse anexo. Lembrando que em um inventario de risco na maioria das vezes são tratados termos nomeados como: riscos, perigos, medidas de controle, danos, 
    #descrição do agente, tipo de risco, gravidade, grupos de risco, niveis de risco, tipo de exposição, ou podem ser usados outras nomenclaturas para esses termos.
 #   Sua função é pegar essas informações e montar um resumo de como esta o padrão usado no documento para informar as informações presentes no inventário de risco.
  #  Lembre que esse JSON é a descrição de um arquivo.
  #expected_output: >
    # Retorne um resumo de como está o padrão usado no documento para informar as informações presentes no inventário de risco.
    #Exemplo de estrutura:
    #- Grupos de Riscos:
    #  - xxx 
    #  ...
    #- Grupos de Risco se tiver presente:
     # - ghe_01: x
      #...
    #- Tipos de risco:
     # - Físico: x
    #  ...
    #- Níveis de risco:
     # - Baixo: x
     # ...
   # Faça algo parecido mas somente com informações presentes no JSON, não use informações que não estão presentes no arquivo.
 # agent: PgrExpert

#ghedetector_task:
  #description: >
    #Analise o JSON recebido de um docuemnto PGR e identifique se há a utilização de GHE (Grupo Homogêneo de Exposição) ou não.
    #Lembrando que o GHE é um grupo de trabalhadores que possuem exposição semelhante a um agente de risco, mas nem sempre pode ser nomeado de GHE.
    #Cuidado com a formatação do JSON pois haverá troca de páginas no documento que causa a quebra de seções. E também será utilizado muitas vezes tabelas no arquivo original que quando passado para JSON pode ser quebrado.
    #Lembre que quase sempre terá mais de um GHE, então sempre busque se há mais de um GHE presente.
  #expected_output: >
    #Caso tenha encontrado GHE, retorne TODOS os grupos encontrados e seus integrantes de forma organizada, caso contrário retorne 'Não foi encontrado GHE'. 
    #Cuidado sempre para pegar todos os grupos presentes referentes a GHE (Grupo de cargos Homogêneos de Exposição). Apontando principalmente o setor e todos os cargos que estão incluidos se houver descrição dos mesmos.
    #Exemplo de resposta com informações fictícias:
    #- GHE 01:
      #- Setor: Produção
        #- Cargo: Operador de Máquinas
        #- Cargo: Auxiliar de Produção
    #- GHE 02:
      #- Setor: Administrativo
        #- Cargo: Auxiliar Administrativo
        #- Cargo: Secretária
  #agent: GheDetector

ghedetector_task:
  description: >
    Analise o PDF recebido de um docuemnto PGR e identifique se há a utilização de GHE (Grupo Homogêneo de Exposição) ou não.
    Lembrando que o GHE é um grupo de trabalhadores que possuem exposição semelhante a um agente de risco, mas nem sempre pode ser nomeado de GHE.
    Cuidado com a formatação do PDF pois haverá troca de páginas no documento que causa a quebra de seções. E também será utilizado muitas vezes tabelas no arquivo original que quando extraído pode ser quebrado.
    Lembre que quase sempre terá mais de um GHE, então sempre busque se há mais de um GHE presente.
  expected_output: >
    Caso tenha encontrado GHE, retorne TODOS os grupos encontrados e seus integrantes de forma organizada, caso contrário retorne 'Não foi encontrado GHE'. 
    Cuidado sempre para pegar todos os grupos presentes referentes a GHE (Grupo de cargos Homogêneos de Exposição). Apontando principalmente o setor e todos os cargos que estão incluidos se houver descrição dos mesmos.
    Exemplo de resposta com informações fictícias:
    - GHE 01:
      - Setor: Produção
        - Cargo: Operador de Máquinas
        - Cargo: Auxiliar de Produção
    - GHE 02:
      - Setor: Administrativo
        - Cargo: Auxiliar Administrativo
        - Cargo: Secretária
  agent: GheDetector

riskanalyst_task:
  description: >
    Analise o PDF recebido de um docuemnto PGR e identifique os níveis de riscos presentes no documento.
    Lembrando que os níveis de riscos são classificados em: Risco Insignificante, Risco Baixo, Risco Médio, Risco Alto e Risco Muito Alto NA MAIORIA DOS CASOS,
    caso não seja essa classificação, será uma nomeclatura semelhante!
    Lembre sempre de assemelhar cada cor de risco com seu respectivo nível.
    Cuidado com a formatação do pdf pois haverá troca de páginas durante uma seção.
  expected_output: >
    Retorne os níveis de riscos encontrados no documento de forma organizada com suas respectivas cores sinalizadas.
    Exemplo de resposta com informações fictícias:
    - Risco Insignificante: Azul
    - Risco Baixo: Verde
    - Risco Médio: Amarelo
    - Risco Alto: Laranja
    - Risco Muito Alto: Vermelho
  agent: RiskAnalyst

#riskdescription_task:
 # description: >
  #  Analise o pdf recebido de um docuemnto PGR e identifique as descrições e tipos de riscos presentes no documento.
   # Lembrando que as descrições e tipos de riscos são classificados em: Riscos Físicos, Riscos Químicos, Riscos Biológicos, Riscos Ergonômicos e Riscos de Acidentes na maioria dos casos,
   # caso não seja essa classificação, será uma nomeclatura semelhante.
   # Cuidado com a formatação do pdf pois haverá troca de páginas durante uma seção.
 # expected_output: >
  #  Retorne as descrições e tipos de riscos encontrados no documento de forma organizada.
  #agent: RiskDescription

#dataorganizer_task:
 # description: >
 #   Organize os dados recebidos de forma cronológica.
  #  Lembre-se de organizar os dados de forma correta de acordo com o necessário para ter uma boa visão do documento analisado.
   # Sempre siga um padrão de organização para que os dados sejam facilmente compreendidos.
  #expected_output: >
  #  Retorne os dados organizados de forma correta e cronológica, sendo algo desta forma:
   # - GHE e Cargo respectivo ou caso não tenha GHE apenas o cargo;
    # - Tipo de risco;
    #  - Descrição do risco;
    #   - Nível de risco;
    # - Tipo de risco2;
    #  - Descrição do risco2;
    #   - Nível de risco2;
    #- E assim por diante.
  #agent: DataOrganizer